<Type Name="_Items" FullName="Microsoft.Office.Interop.Outlook._Items">
  <Metadata><Meta Name="ms.openlocfilehash" Value="90ccbcb3fe07f548327e1919c5fa54fecbde32ba" /><Meta Name="ms.sourcegitcommit" Value="9e48edef9d279c87fa2fbd78f150bc92c2332179" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/13/2021" /><Meta Name="ms.locfileid" Value="51691750" /></Metadata><TypeSignature Language="C#" Value="public interface _Items : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Items implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._Items" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Items&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Items : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063041-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2b0e8-101">これは、対応する COM オブジェクトとの相互運用性のためにマネージ コードで必要な COM コクラスのプライマリ インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="2b0e8-102">このプライマリ インターフェイスは、使用するメソッドが COM オブジェクトのイベントと同じ名前を共有している場合にのみ使用します。この場合は、このインターフェイスにキャストしてメソッドを呼び出し、イベントに接続するために最新のイベント インターフェイスにキャストします。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="2b0e8-103">それ以外の場合は、COM コクラスから派生した .NET インターフェイスを使用して、COM オブジェクトのメソッド、プロパティ、およびイベントにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="2b0e8-104">COM オブジェクトの詳細については、「. <see cref="T:Microsoft.Office.Interop.Outlook.Items" /></span><span class="sxs-lookup"><span data-stu-id="2b0e8-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.Items" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add([in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Items.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(95)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="2b0e8-105">新しい項目の Outlook アイテムの種類です。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-105">The Outlook item type for the new item.</span></span> <span data-ttu-id="2b0e8-106">カスタム フォームを <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.MessageClass" /> 作成する A を指定します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-106">Specifies a <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.MessageClass" /> to create custom forms.</span></span> <span data-ttu-id="2b0e8-107"><b>OlItemType</b> 定数は、次のいずれか: <b>olAppointmentItem</b> 、 <b>olContactItem</b> 、 <b>olJournalItem</b> 、 <b>olMailItem</b> 、 <b>olNoteItem</b> 、 <b>olPostItem</b> 、または <b>olTaskItem</b> 、または任意の有効なメッセージ クラスです。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-107">Can be one of the following <b>OlItemType</b> constants: <b>olAppointmentItem</b>, <b>olContactItem</b>, <b>olJournalItem</b>, <b>olMailItem</b>, <b>olNoteItem</b>, <b>olPostItem</b>, or <b>olTaskItem,</b>, or any valid message class.</span></span></param>
        <summary><span data-ttu-id="2b0e8-108">フォルダーのコレクションに新しい Outlook <see cref="T:Microsoft.Office.Interop.Outlook.Items" /> アイテムを作成します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-108">Creates a new Outlook item in the <see cref="T:Microsoft.Office.Interop.Outlook.Items" /> collection for the folder.</span></span></summary>
        <returns><span data-ttu-id="2b0e8-109">新しい Outlook アイテムを表すオブジェクト型 (Object) の値。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-109">An Object value that represents the new Outlook item.</span></span></returns>
        <remarks><para><span data-ttu-id="2b0e8-110">指定しない場合 <b>、Outlook</b> アイテムの Type プロパティは既定でフォルダーの種類、または親フォルダーが型指定されていない <see cref="T:Microsoft.Office.Interop.Outlook.MailItem" /> 場合に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-110">If not specified, the <b>Type</b> property of the Outlook item defaults to the type of the folder or to <see cref="T:Microsoft.Office.Interop.Outlook.MailItem" /> if the parent folder is not typed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Items.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0e8-111">オブジェクトの <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  親 Outlook アプリケーションを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-111">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="2b0e8-112">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-112">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Items.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0e8-113">オブジェクトのクラス <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> を示す定数を返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-113">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="2b0e8-114">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-114">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Items.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0e8-115">指定 <b>したコレクション内</b> の<b>オブジェクト</b> の数C#整数 (整数型 ) の値を返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-115">Returns an <b>Integer</b> (<b>int</b> in C#) value indicating the count of objects in the specified collection.</span></span> <span data-ttu-id="2b0e8-116">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-116">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public object Find (string Filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Find([in]string Filter) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Items.Find(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (Filter As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Find(System::String ^ Filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(98)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filter"><span data-ttu-id="2b0e8-117">取得したオブジェクトが満たす必要がある条件を指定する文字列です。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-117">A string that specifies the criteria that the returned object must satisfy.</span></span></param>
        <summary><span data-ttu-id="2b0e8-118">指定したアイテムを満たす Outlook アイテム オブジェクトを見つけて返します <paramref name="Filter" /> 。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-118">Locates and returns an Outlook item object that satisfies the given <paramref name="Filter" />.</span></span></summary>
        <returns><span data-ttu-id="2b0e8-119">呼び出しが成功した場合に Outlook アイテムを表す Object 値。エラーが <b>発生した</b> 場合は Nothing (null 参照 (Visual Basic) C#) を返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-119">An Object value that represents an Outlook item if the call succeeds; returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#)  if it fails.</span></span></returns>
        <remarks><para><span data-ttu-id="2b0e8-120">コレクション内でコンテンツ インデックス検索を使用するには <see cref="T:Microsoft.Office.Interop.Outlook.Items" /> 、メソッドを使用 <see cref="M:Microsoft.Office.Interop.Outlook._Items.Restrict(System.String)" /> します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-120">To use content indexing search in the <see cref="T:Microsoft.Office.Interop.Outlook.Items" /> collection, use the <see cref="M:Microsoft.Office.Interop.Outlook._Items.Restrict(System.String)" /> method.</span></span> <span data-ttu-id="2b0e8-121">コンテンツ インデックスキーワードが含まれている場合<b>、FindRow</b> <paramref name="Filter" /> はエラーを返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-121"><b>FindRow</b> will return an error if <paramref name="Filter" /> contains content indexing keywords.</span></span> <span data-ttu-id="2b0e8-122">コンテンツ インデックス キーワードの詳細については、「クエリ キーワードを使用してアイテムをフィルター <a href="http://go.microsoft.com/fwlink/?LinkId=87947">処理する」を参照してください。</a></span><span class="sxs-lookup"><span data-stu-id="2b0e8-122">For more information on content indexing keywords, see <a href="http://go.microsoft.com/fwlink/?LinkId=87947">Filtering Items Using Query Keywords</a></span></span></para>
          <para><span data-ttu-id="2b0e8-123">メソッドは、次のプロパティでエラーを返します <paramref name="Filter" /> 。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-123">The method will return an error with the following properties in the <paramref name="Filter" />:</span></span> </para>
          <list type="table">
            <item>
              <description><span data-ttu-id="2b0e8-124">BodyCategoriesChildrenClassCompaniesCompanyLastFirstNoSpaceCompanyLastFirstSpaceOnlyContactNamesContactsConversationIndexDLNameEmail1EntryIDEmail2EntryIDEmail3EntryIDEntryIDHTMLBodyIsOnlineMeetingLastFirstAndSuffixLastFirstNoSpaceAutoResolvedWinnerBodyFormatInternetCodePagePermission</span><span class="sxs-lookup"><span data-stu-id="2b0e8-124">BodyCategoriesChildrenClassCompaniesCompanyLastFirstNoSpaceCompanyLastFirstSpaceOnlyContactNamesContactsConversationIndexDLNameEmail1EntryIDEmail2EntryIDEmail3EntryIDEntryIDHTMLBodyIsOnlineMeetingLastFirstAndSuffixLastFirstNoSpaceAutoResolvedWinnerBodyFormatInternetCodePagePermission</span></span></description>
              <description><span data-ttu-id="2b0e8-125">LastFirstNoSpaceCompanyLastFirstSpaceOnlyLastFirstSpaceOnlyCompanyLastFirstNoSpaceAndSuffixMemberCountNetMeetingAliasNetMeetingAutoStartNetMeetingOrganizerAliasNetMeetingServerNetMeetingTypeRecurrenceStateReplyRecipientsReceivedByEntryIDRecevedOnBehalfOfEntryIDResponseStateSavedSentSubmittedVotingOptionsDownloadStateIsConflictMeetingWorkspaceURL</span><span class="sxs-lookup"><span data-stu-id="2b0e8-125">LastFirstNoSpaceCompanyLastFirstSpaceOnlyLastFirstSpaceOnlyCompanyLastFirstNoSpaceAndSuffixMemberCountNetMeetingAliasNetMeetingAutoStartNetMeetingOrganizerAliasNetMeetingServerNetMeetingTypeRecurrenceStateReplyRecipientsReceivedByEntryIDRecevedOnBehalfOfEntryIDResponseStateSavedSentSubmittedVotingOptionsDownloadStateIsConflictMeetingWorkspaceURL</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="2b0e8-126">Find メソッドおよび Restrict メソッドのためのフィルターの作成</span><span class="sxs-lookup"><span data-stu-id="2b0e8-126">Creating Filters for the Find and Restrict Methods</span></span></para>
          <para><span data-ttu-id="2b0e8-p107">フィルターの構文は、フィルターを適用するフィールドの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-p107">The syntax for the filter varies depending on the type of field you are filtering on. </span></span></para>
          <para><span data-ttu-id="2b0e8-128">文字列 (テキスト フィールドの場合)</span><span class="sxs-lookup"><span data-stu-id="2b0e8-128">String (for Text fields)</span></span> </para>
          <para><span data-ttu-id="2b0e8-129">テキスト フィールドを検索する場合は、アポストロフィ (') または二重引用符 (") を使用して、フィルターの一部である値を区切ることができます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-129">When searching Text fields, you can use either an apostrophe (') or  double quotation marks ("") to delimit the values that are part of the filter.</span></span> <span data-ttu-id="2b0e8-130">たとえば、フィールドが String (文字列) 型の場合、次<b></b>のすべての行<b></b>が正C#。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-130">For example, all of the following lines function correctly when the field is of type <b>String</b> (<b>string</b> in C#):</span></span> </para>
          <para><span data-ttu-id="2b0e8-131">sFilter = "[CompanyName] = 'Microsoft'</span><span class="sxs-lookup"><span data-stu-id="2b0e8-131">sFilter = "[CompanyName] = 'Microsoft'"</span></span> </para>
          <para><span data-ttu-id="2b0e8-132">sFilter = "[CompanyName] = "Microsoft""</span><span class="sxs-lookup"><span data-stu-id="2b0e8-132">sFilter = "[CompanyName] = ""Microsoft"""</span></span> </para>
          <para><span data-ttu-id="2b0e8-133">sFilter = "[CompanyName] = " &amp; Chr(34) &amp; "Microsoft" &amp; Chr(34)</span><span class="sxs-lookup"><span data-stu-id="2b0e8-133">sFilter = "[CompanyName] = " &amp; Chr(34) &amp; "Microsoft" &amp; Chr(34)</span></span></para>
          <para><span data-ttu-id="2b0e8-p109">Jet または DASL クエリでフィルターを指定するときに、フィルターに含める文字列の区切り文字として単一引用符のペアを使用しており、かつその文字列に別の単一引用符やアポストロフィが含まれている場合は、その単一引用符またはアポストロフィの前に、エスケープ文字として単一引用符を追加します。文字列の区切り文字として二重引用符を使用している場合も、同様に処理します。つまり、文字列に二重引用符が含まれている場合は、その二重引用符の前に、エスケープ文字として二重引用符を追加します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-p109">In specifying a filter in a Jet or DASL query, if you use a pair of single quotes to delimit a string that is part of the filter, and the string contains another single quote or apostrophe, then add a single quote as an escape character before the single quote or apostrophe. Use a similar approach if you use a pair of double quotes to delimit a string. If the string contains a double quote, then add a double quote as an escape character before the double quote.</span></span></para>
          <para><span data-ttu-id="2b0e8-137">たとえば <b>、Subject</b> プロパティが単語に等しいフィルター処理を行う DASL フィルター文字列では、フィルター文字列全体が二重引用符のペアで区切り、埋め込み文字列を 2 つの一重引用符で区切って指定できます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-137">For example, in the DASL filter string that filters for the <b>Subject</b> property being equal to the word can't, the entire filter string is delimited by a pair of double quotes, and the embedded string can't is delimited by a pair of single quotes.</span></span> <span data-ttu-id="2b0e8-138">このフィルター文字列には、プロパティ参照の開始二重引用符と終了二重引用符、および単語の値条件のアポストロフィの 3 つの文字をエスケープする必要があります http://schemas.microsoft.com/mapi/proptag/0x0037001f 。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-138">There are three characters that you need to escape in this filter string: the starting double quote and the ending double quote for the property reference of http://schemas.microsoft.com/mapi/proptag/0x0037001f, and the apostrophe in the value condition for the word can't.</span></span> <span data-ttu-id="2b0e8-139">適切なエスケープ文字を適用すると、フィルター文字列を次のように表すことができます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-139">Applying the appropriate escape characters, you can express the filter string as follows:</span></span></para>
          <para><span data-ttu-id="2b0e8-140">filter = "@SQL="" http://schemas.microsoft.com/mapi/proptag/0x0037001f "" = 'can't'"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-140">filter = "@SQL=""http://schemas.microsoft.com/mapi/proptag/0x0037001f"" = 'can''t'"</span></span></para>
          <para><span data-ttu-id="2b0e8-141">chr(34) 関数を使用して、エスケープ文字として使用される二重引用符 (ASCII 文字値は 34) を表すこともできます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-141">Alternatively, you can use the chr(34) function to represent the double quote (whose ASCII character value is 34) that is used as an escape character.</span></span> <span data-ttu-id="2b0e8-142">二重引用符のエスケープ文字の代わりに chr(34) を使用すると、最後の例を次のように表すことができます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-142">Using the chr(34) substitution for a double-quote escape character, you can express the last example as follows:</span></span></para>
          <para><span data-ttu-id="2b0e8-143">filter = "@SQL= " &amp; Chr(34) &amp; " " http://schemas.microsoft.com/mapi/proptag/0x0037001f _</span><span class="sxs-lookup"><span data-stu-id="2b0e8-143">filter = "@SQL= " &amp; Chr(34) &amp; "http://schemas.microsoft.com/mapi/proptag/0x0037001f" _</span></span></para>
          <para>    <span data-ttu-id="2b0e8-144">&amp; Chr(34) &amp; " = " &amp; ''t''</span><span class="sxs-lookup"><span data-stu-id="2b0e8-144">&amp; Chr(34) &amp; " = " &amp; "'can''t'"</span></span></para>
          <para><span data-ttu-id="2b0e8-145">DASL クエリを <b>ci_startswith</b> 演算子または <b>ci_phrasematch</b> 演算子と共に使用する場合も、単一引用符と二重引用符をエスケープする必要があります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-145">Escaping single and double quote characters is also required for DASL queries with the <b>ci_startswith</b> or <b>ci_phrasematch</b> operators.</span></span> <span data-ttu-id="2b0e8-146">たとえば、次のクエリは、メッセージの件名で can't の語句一致クエリを実行します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-146">For example, the following query performs a phrase match query for can't in the message subject:</span></span> </para>
          <para><span data-ttu-id="2b0e8-147">filter = "@SQL=" &amp; Chr(34) &amp; " http://schemas.microsoft.com/mapi/proptag/0x0037001E " _</span><span class="sxs-lookup"><span data-stu-id="2b0e8-147">filter = "@SQL=" &amp; Chr(34) &amp; "http://schemas.microsoft.com/mapi/proptag/0x0037001E" _</span></span></para>
          <para>    <span data-ttu-id="2b0e8-148">&amp; Chr(34) &amp; " ci_phrasematch &amp; "'can't'"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-148">&amp; Chr(34) &amp; " ci_phrasematch " &amp; "'can''t'"</span></span></para>
          <para><span data-ttu-id="2b0e8-149">もう 1 つの例は <b>、Subject</b> プロパティが適切な単語と等しい単語をフィルター処理する DASL フィルター文字列です。ここで、単語の内容は二重引用符で囲まれます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-149">Another example is a DASL filter string that filters for the <b>Subject</b> property being equal to the words the right stuff, where the word stuff is enclosed by double quotes.</span></span> <span data-ttu-id="2b0e8-150">この場合、次に示すように、末尾の二重引用符をエスケープする必要があります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-150">In this case, you must escape the enclosing double quotes as follows:</span></span></para>
          <para><span data-ttu-id="2b0e8-151">filter = "@SQL="" http://schemas.microsoft.com/mapi/proptag/0x0037001f "" = 'right ""stuff"''</span><span class="sxs-lookup"><span data-stu-id="2b0e8-151">filter = "@SQL=""http://schemas.microsoft.com/mapi/proptag/0x0037001f"" = 'the right ""stuff""'"</span></span></para>
          <para><span data-ttu-id="2b0e8-152">スペース、単一引用符、二重引用符、またはパーセント文字を含んでいる名前付きプロパティのプロパティ参照には、別のエスケープ規則のセットが適用されます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-152">A different set of escaping rules apply to a property reference for named properties that contain the space, single quote, double quote, or percent character.</span></span> <span data-ttu-id="2b0e8-153">詳細については、「名前空間によってプロパティを参照する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-153">For more information, see Referencing Properties by Namespace.</span></span></para>
          <para><span data-ttu-id="2b0e8-154">日付</span><span class="sxs-lookup"><span data-stu-id="2b0e8-154">Date</span></span></para>
          <para><span data-ttu-id="2b0e8-155">通常、日付と時刻は Date 形式で格納しますが、Find メソッドと Restrict メソッドでは、日付と時刻を文字列形式に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-155">Although dates and times are typically stored with a Date format, the Find and Restrict methods require that the date and time be converted to a string representation.</span></span> <span data-ttu-id="2b0e8-156">Microsoft Outlook が必要とするとおりに日付が形式化されるようにするには、Format 関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-156">To make sure that the date is formatted as Microsoft Outlook expects, use the Format function.</span></span> <span data-ttu-id="2b0e8-157">次の例では、1999 年 1 月 15 日の午後 3 時 30 分より後に変更されたすべての連絡先を検索するフィルターを作成しています。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-157">The following example creates a filter to find all contacts that have been modified after January 15, 1999 at 3:30 P.M.</span></span> </para>
          <para><span data-ttu-id="2b0e8-158">sFilter = "[LastModificationTime] &gt; '" &amp; Format("1/15/99 3:30pm", "ddddd h:nn AMPM") &amp; "'"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-158">sFilter = "[LastModificationTime] &gt; '" &amp; Format("1/15/99 3:30pm", "ddddd h:nn AMPM") &amp; "'"</span></span></para>
          <para><span data-ttu-id="2b0e8-159">Boolean 演算子</span><span class="sxs-lookup"><span data-stu-id="2b0e8-159">Boolean Operators</span></span></para>
          <para><span data-ttu-id="2b0e8-p116">TRUE/FALSE、YES/NO、ON/OFF などのブール型 (Boolean) の値は、文字列に変換せずに処理する必要があります。たとえば、連絡先の履歴が有効になっているかどうかを確認するには、次のフィルターを使用します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-p116">Boolean operators, TRUE/FALSE, YES/NO, ON/OFF, and so on, should not be converted to a string. For example, to determine whether journaling is enabled for contacts, you can use this filter: </span></span></para>
          <para><span data-ttu-id="2b0e8-162">sFilter = "[Journal] = True"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-162">sFilter = "[Journal] = True"</span></span> </para>
          <para><span data-ttu-id="2b0e8-163">
            <b>注</b>: ブール型フィールドで区切り記号として二重引用符を使用すると、空の文字列はフィールドが False のアイテムを検索し、空でない文字列はすべてフィールドが True のアイテムを検索します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-163">
            <b>Note</b>: If you use quotation marks as delimiters with Boolean fields, then an empty string will find items whose fields are False and all non-empty strings will find items whose fields are True.</span></span></para>
          <para><span data-ttu-id="2b0e8-164">キーワード (または Categories)</span><span class="sxs-lookup"><span data-stu-id="2b0e8-164">Keywords (or Categories)</span></span></para>
          <para><span data-ttu-id="2b0e8-165">[カテゴリ] フィールドは、複数の値を保持するように設計された型キーワードです。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-165">The Categories field is of type keywords, which is designed to hold multiple values.</span></span> <span data-ttu-id="2b0e8-166">プログラムでアクセスするときには、Categories フィールドはテキスト フィールドのように動作し、文字列は完全一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-166">When accessing it programmatically, the Categories field behaves like a Text field, and the string must match exactly.</span></span> <span data-ttu-id="2b0e8-167">テキスト文字列内の値は、コンマとスペースで区切られています。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-167">Values in the text string are separated by a comma and a space.</span></span> <span data-ttu-id="2b0e8-168">つまり、一般に複数の値が含まれているキーワード フィールドには Find メソッドと Restrict メソッドが使用できないということです。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-168">This typically means that you cannot use the Find and Restrict methods on a keywords field if it contains more than one value.</span></span> <span data-ttu-id="2b0e8-169">たとえば、Business のカテゴリに 1 つの連絡先があり、Business と Social のカテゴリに 1 つの連絡先がある場合は、Business のカテゴリに含まれるすべてのアイテムを取得するために、Find メソッドと Restrict メソッドを簡単に使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-169">For example, if you have one contact in the Business category and one contact in the Business and Social categories, you cannot easily use the Find and Restrict methods to retrieve all items that are in the Business category.</span></span> <span data-ttu-id="2b0e8-170">その代わりに、フォルダー内のすべての連絡先をループ処理して、全体のキーワード フィールド内に文字列 "Business" が含まれているかどうかを Instr 関数でテストします。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-170">Instead, you can loop through all contacts in the folder and use the Instr function to test whether the string "Business" is contained within the entire keywords field.</span></span> </para>
          <para><span data-ttu-id="2b0e8-171">
            <b>注</b>: 可能な例外は、[カテゴリ] フィールドを 2 つ、または値の数が少ない場合です。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-171">
            <b>Note</b>: A possible exception is if you limit the Categories field to two, or a low number of values.</span></span> <span data-ttu-id="2b0e8-172">次に、Or 論理演算子で Find メソッドと Restrict メソッドを使用して、すべての Business 連絡先を取得できます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-172">Then you can use the Find and Restrict methods with the OR logical operator to retrieve all Business contacts.</span></span> <span data-ttu-id="2b0e8-173">たとえば、"Business" OR "Business, Personal" OR "Personal, Business" のようにします (擬似コード)。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-173">For example (in pseudocode): "Business" OR "Business, Personal" OR "Personal, Business."</span></span> <span data-ttu-id="2b0e8-174">Category の文字列は、大文字と小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-174">Category strings are not case sensitive.</span></span></para>
          <para><span data-ttu-id="2b0e8-175">整数</span><span class="sxs-lookup"><span data-stu-id="2b0e8-175">Integer</span></span></para>
          <para><span data-ttu-id="2b0e8-176">区切り記号として引用符を付けずに整数フィールドを検索できます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-176">You can search for Integer fields with or without quotation marks as delimiters.</span></span> <span data-ttu-id="2b0e8-177">次のフィルターは、Outlook 2000 で作成された連絡先を取得します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-177">The following filters will find contacts that were created with  Outlook 2000:</span></span> </para>
          <para><span data-ttu-id="2b0e8-178">sFilter = "[OutlookInternalVersion] = 92711"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-178">sFilter = "[OutlookInternalVersion] = 92711"</span></span> </para>
          <para><span data-ttu-id="2b0e8-179">sFilter = "[OutlookInternalVersion] = '92711'"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-179">sFilter = "[OutlookInternalVersion] = '92711'"</span></span></para>
          <para><span data-ttu-id="2b0e8-180">フィルターの一部として変数を使用する</span><span class="sxs-lookup"><span data-stu-id="2b0e8-180">Using Variables as Part of the Filter</span></span></para>
          <para><span data-ttu-id="2b0e8-181">Restrict メソッドの例に示すように、変数の値をフィルターの一部として使用できます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-181">As the Restrict method example illustrates, you can use values from variables as part of the filter.</span></span> <span data-ttu-id="2b0e8-182">次の Microsoft Visual Basicコード サンプルは、フィルターの一部として変数を使用する構文を示しています。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-182">The following Microsoft Visual Basic code sample illustrates syntax that uses variables as part of the filter.</span></span> </para>
          <para><span data-ttu-id="2b0e8-183">sFullName = "Dan Wilson"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-183">sFullName = "Dan Wilson"</span></span> </para>
          <para> <span data-ttu-id="2b0e8-184">この方法では、Chr(34) を使用して値を区切る: sFilter = "[FullName] = " &amp; Chr(34) &amp; sFullName &amp; Chr(34)</span><span class="sxs-lookup"><span data-stu-id="2b0e8-184">This approach uses Chr(34) to delimit the value: sFilter = "[FullName] = " &amp; Chr(34) &amp; sFullName &amp; Chr(34)</span></span> </para>
          <para> <span data-ttu-id="2b0e8-185">この方法では、二重引用符を使用して値を区切る: sFilter = "[FullName] = &amp; """sFullName &amp; """</span><span class="sxs-lookup"><span data-stu-id="2b0e8-185">This approach uses double quotation marks to delimit the value: sFilter = "[FullName] = """ &amp; sFullName &amp; """"</span></span></para>
          <para><span data-ttu-id="2b0e8-186">フィルターの一部として論理演算子を使用する</span><span class="sxs-lookup"><span data-stu-id="2b0e8-186">Using Logical Operators as Part of the Filter</span></span></para>
          <para><span data-ttu-id="2b0e8-187">論理演算子は、AND、OR、および NOT が使用可能です。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-187">Logical operators that are allowed are AND, OR, and NOT.</span></span> <span data-ttu-id="2b0e8-188">Restrict メソッドの句のバリエーションを次に示します。複数の条件を指定できます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-188">The following are variations of the clause for the Restrict method, so you can specify multiple criteria.</span></span>  </para>
          <para><span data-ttu-id="2b0e8-189">OR: カテゴリが Business または Personal のすべての連絡先アイテムを返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-189">OR: The following code returns all contact items that have either Business or Personal as their category.</span></span> </para>
          <para><span data-ttu-id="2b0e8-190">sFilter = "[Categories] = 'Personal' または [Categories] = 'Business'</span><span class="sxs-lookup"><span data-stu-id="2b0e8-190">sFilter = "[Categories] = 'Personal' Or [Categories] = 'Business'"</span></span> </para>
          <para><span data-ttu-id="2b0e8-191">AND: Microsoft で勤務している個人用連絡先をすべて取得します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-191">AND: The following code retrieves all personal contacts who work at Microsoft.</span></span> </para>
          <para><span data-ttu-id="2b0e8-192">sFilter = "[Categories] = 'Personal' および [CompanyName] = 'Microsoft'</span><span class="sxs-lookup"><span data-stu-id="2b0e8-192">sFilter = "[Categories] = 'Personal' And [CompanyName] = 'Microsoft'"</span></span> </para>
          <para><span data-ttu-id="2b0e8-193">NOT: Microsoft に勤務していない個人用連絡先をすべて取得します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-193">NOT: The following code retrieves all personal contacts who don't work at Microsoft.</span></span> </para>
          <para><span data-ttu-id="2b0e8-194">sFilter = "[Categories] = 'Personal' and Not([CompanyName] = 'Microsoft')"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-194">sFilter = "[Categories] = 'Personal' And Not([CompanyName] = 'Microsoft')"</span></span></para>
          <para><span data-ttu-id="2b0e8-195">追加情報</span><span class="sxs-lookup"><span data-stu-id="2b0e8-195">Additional Notes</span></span></para>
          <para><span data-ttu-id="2b0e8-196">ユーザー定義フィールドで Find メソッドまたは Restrict メソッドを使用する場合は、フィールドをフォルダー内で定義する必要があります。それ以外の場合はエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-196">If you are trying to use the Find or Restrict methods with user-defined fields, the fields must be defined in the folder, otherwise an error will occur.</span></span> <span data-ttu-id="2b0e8-197">「含む」操作を実行する方法はありません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-197">There is no way to perform a "contains" operation.</span></span> <span data-ttu-id="2b0e8-198">たとえば、Subject フィールドに特定の語が含まれているアイテムを検索するために、Find または Restrict は使用できません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-198">For example, you cannot use Find or Restrict to search for items that have a particular word in the Subject field.</span></span> <span data-ttu-id="2b0e8-199">その代わりに、AdvancedSearch メソッドを使用できます。また、フォルダー内のすべてのアイテムをループ処理し、InStr 関数を使用してフィールド内の検索を実行することもできます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-199">Instead, you can use the AdvancedSearch method, or you can loop through all of the items in the folder and use the InStr function to perform a search within a field.</span></span> <span data-ttu-id="2b0e8-200">Restrict メソッドは、特定の範囲の文字で始まるアイテムの検索に使用できます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-200">You can use the Restrict method to search for items that begin within a certain range of characters.</span></span> <span data-ttu-id="2b0e8-201">たとえば、姓が文字 M で始まる連絡先のすべてを検索するには、次のフィルターを使用します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-201">For example, to search for all contacts with a last name beginning with the letter M, use this filter:</span></span> </para>
          <para><span data-ttu-id="2b0e8-202">sFilter = "[LastName] &gt; 'LZZZ' および [LastName] &lt; 'N'"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-202">sFilter = "[LastName] &gt; 'LZZZ' And [LastName] &lt; 'N'"</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNext">
      <MemberSignature Language="C#" Value="public object FindNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindNext() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Items.FindNext" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNext () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(99)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b0e8-203">メソッドの <see cref="M:Microsoft.Office.Interop.Outlook._Items.Find(System.String)" />  実行後、このメソッドは指定したコレクション内の次の Outlook アイテムを検索して返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-203">After the <see cref="M:Microsoft.Office.Interop.Outlook._Items.Find(System.String)" />  method runs, this method finds and returns the next Outlook item in the specified collection.</span></span></summary>
        <returns><span data-ttu-id="2b0e8-204">コレクション内で見つかった次の Outlook アイテムを表すオブジェクト型 (Object) の値。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-204">An Object value that represents the next Outlook item found in the collection.</span></span></returns>
        <remarks><para> <span data-ttu-id="2b0e8-205">検索操作は、 <b>Find</b> メソッドで設定された式に一致する現在の位置から開始します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-205">The search operation begins from the current position, which matches the expression previously set through the <b>Find</b> method.</span></span></para>
          <para><span data-ttu-id="2b0e8-206">呼び出しが成功した場合、このメソッドは Outlook アイテム オブジェクトを返します。エラーが発生 <b>した場合</b> は Nothing (null 参照 (Visual Basic) C#) を返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-206">The method returns an Outlook item object if the call succeeds; it returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#) if it fails.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirst">
      <MemberSignature Language="C#" Value="public object GetFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirst() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Items.GetFirst" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirst () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirst();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(86)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b0e8-207">コレクションの先頭のオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-207">Returns the first object in the collection.</span></span></summary>
        <returns><span data-ttu-id="2b0e8-208">コレクションに格納されている先頭のオブジェクトを表すオブジェクト型 (Object) の値。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-208">An Object value that represents the first object contained by the collection.</span></span></returns>
        <remarks><para><span data-ttu-id="2b0e8-209">コレクション内<b>にオブジェクト</b>がない場合など、最初のオブジェクトが存在しない場合は Nothing を返します。大規模なコレクション内の<b>GetFirst</b>、、、およびメソッドの正しい操作を確認するには、そのコレクションで GetNext を呼び出す前に GetFirst を呼び出し <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetLast" /> <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetNext" /> <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetPrevious" /> <b></b><b>、GetPrevious</b><b></b>を呼び出す前に<b>GetLast</b>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-209">Returns <b>Nothing</b> if no first object exists, for example, if there are no objects in the collection.To ensure correct operation of the <b>GetFirst</b>, <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetLast" />, <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetNext" />, and <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetPrevious" /> methods in a large collection, call <b>GetFirst</b> before calling <b>GetNext</b> on that collection and call <b>GetLast</b> before calling <b>GetPrevious</b>.</span></span> <span data-ttu-id="2b0e8-210">コレクションの呼び出しを常に行っていることを確認するには、ループに入る前に、そのコレクションを参照する明示的な変数を作成します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-210">To ensure that you are always making the calls on the same collection, create an explicit variable that refers to that collection before entering the loop.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLast">
      <MemberSignature Language="C#" Value="public object GetLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLast() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Items.GetLast" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLast () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetLast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b0e8-211">コレクションの末尾のオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-211">Returns the last object in the collection.</span></span></summary>
        <returns><span data-ttu-id="2b0e8-212">コレクションに格納されている末尾のオブジェクトを表すオブジェクト型 (Object) の値。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-212">An Object value that represents the last object contained by the collection.</span></span></returns>
        <remarks><para><span data-ttu-id="2b0e8-213">コレクションが空<b>の場合</b>など、最後のオブジェクトが存在しない場合は Nothing を返します。大規模なコレクション内の 、 GetLast 、およびメソッドの正しい操作を確実に行う場合は、そのコレクションで GetNext を呼び出す前に <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetFirst" /> <b></b> <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetNext" /> <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetPrevious" /> <b>GetFirst</b>を呼び出し<b></b><b>、GetPrevious</b>を呼び出す前に<b>GetLast</b>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-213">It returns <b>Nothing</b> if no last object exists, for example, if the collection is empty.To ensure correct operation of the <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetFirst" />, <b>GetLast</b>, <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetNext" />, and <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetPrevious" /> methods in a large collection, call <b>GetFirst</b> before calling <b>GetNext</b> on that collection, and call <b>GetLast</b> before calling <b>GetPrevious</b>.</span></span> <span data-ttu-id="2b0e8-214">コレクションの呼び出しを常に行っていることを確認するには、ループに入る前に、そのコレクションを参照する明示的な変数を作成します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-214">To ensure that you are always making the calls on the same collection, create an explicit variable that refers to that collection before entering the loop.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNext">
      <MemberSignature Language="C#" Value="public object GetNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetNext() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Items.GetNext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNext () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(87)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b0e8-215">コレクション内の次のオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-215">Returns the next object in the collection.</span></span></summary>
        <returns><span data-ttu-id="2b0e8-216">コレクションに格納されている次のオブジェクトを表すオブジェクト型 (Object) の値。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-216">An Object value that represents the next object contained by the collection.</span></span></returns>
        <remarks><para><span data-ttu-id="2b0e8-217">次のオブジェクト<b>が</b>存在しない場合 、たとえば、コレクションの末尾に既に配置されている場合は、Nothing を返します。大きなコレクション内の 、 、 、 GetNext 、 およびメソッドの正しい操作を確認するには、そのコレクションで GetNext を呼び出す前に GetFirst を呼び出し <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetFirst" /> <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetLast" /> <b></b> <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetPrevious" /> <b></b><b>、GetPrevious</b><b></b>を呼び出す前に<b>GetLast</b>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-217">It returns <b>Nothing</b> if no next object exists, for example, if already positioned at the end of the collection.To ensure correct operation of the <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetFirst" />, <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetLast" />, <b>GetNext</b>, and <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetPrevious" /> methods in a large collection, call <b>GetFirst</b> before calling <b>GetNext</b> on that collection, and call <b>GetLast</b> before calling <b>GetPrevious</b>.</span></span> <span data-ttu-id="2b0e8-218">コレクションの呼び出しを常に行っていることを確認するには、ループに入る前に、そのコレクションを参照する明示的な変数を作成します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-218">To ensure that you are always making the calls on the same collection, create an explicit variable that refers to that collection before entering the loop.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrevious">
      <MemberSignature Language="C#" Value="public object GetPrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPrevious() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Items.GetPrevious" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrevious () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(89)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b0e8-219">コレクション内の 1 つ前のオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-219">Returns the previous object in the collection.</span></span></summary>
        <returns><span data-ttu-id="2b0e8-220">コレクションに格納されている 1 つ前のオブジェクトを表すオブジェクト型 (Object) の値。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-220">An Object value that represents the previous object contained by the collection.</span></span></returns>
        <remarks><para><span data-ttu-id="2b0e8-221">コレクションの<b>先頭に</b>既に配置されている場合など、前のオブジェクトが存在しない場合は Nothing を返します。大きなコレクション内の 、 、 および GetPrevious メソッドの正しい操作を確認するには、GetFirst を呼び出してからそのコレクションで GetNext を呼び出し <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetFirst" /> <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetLast" /> <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetNext" /> <b></b><b></b><b>、GetPrevious</b><b></b>を呼び出す前に<b>GetLast</b>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-221">It returns <b>Nothing</b> if no previous object exists, for example, if already positioned at the beginning of the collection.To ensure correct operation of the <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetFirst" />, <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetLast" />, <see cref="M:Microsoft.Office.Interop.Outlook._Items.GetNext" />, and <b>GetPrevious</b> methods in a large collection, call <b>GetFirst</b> before calling <b>GetNext</b> on that collection, and call <b>GetLast</b> before calling <b>GetPrevious</b>.</span></span> <span data-ttu-id="2b0e8-222">コレクションの呼び出しを常に行っていることを確認するには、ループに入る前に、そのコレクションを参照する明示的な変数を作成します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-222">To ensure that you are always making the calls on the same collection, create an explicit variable that refers to that collection before entering the loop.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeRecurrences">
      <MemberSignature Language="C#" Value="public bool IncludeRecurrences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeRecurrences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Items.IncludeRecurrences" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeRecurrences As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeRecurrences { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(206)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0e8-223">コレクションに定期的<b>なパターン</b>を含める必要C# True を示す<b>ブール</b>型 (ブール型 (bool)<b></b> <see cref="T:Microsoft.Office.Interop.Outlook.Items" /> の値を返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-223">Returns a <b>Boolean</b> (<b>bool</b> in C#) that indicates <b>True</b> if the <see cref="T:Microsoft.Office.Interop.Outlook.Items" /> collection should include recurrence patterns.</span></span> <span data-ttu-id="2b0e8-224">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-224">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2b0e8-225">このプロパティは <b>、Items</b> コレクションに予定が含まれている場合にのみ有効であり、昇順以外のプロパティで並 <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.Start" /> べ替えされません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-225">This property only has an effect if the <b>Items</b> collection contains appointments and is not sorted by any property other than <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.Start" /> in ascending order.</span></span> <span data-ttu-id="2b0e8-226">既定値は、 <b>false を指定</b> します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-226">The default value is <b>False</b>.</span></span> <span data-ttu-id="2b0e8-227">プロパティを使用してこの特定の日付のすべての予定を取得する場合に、定期的な予定は通常は表示されません、特定の日付に関連付けられているではないためです。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-227">Use this property when you want to retrieve all appointments for a given date, where recurring appointments would not normally appear because they are not associated with any specific date.</span></span> <span data-ttu-id="2b0e8-228">予定表アイテムを定期的な予定の並べ替えし、フィルター処理する必要がある場合は、次の順序で行う必要があります: 昇順でアイテムを並べ替える、 <b>日付</b> に設定する <b>場合は True</b> 、およびアイテムのフィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-228">If you need to sort and filter on appointment items that contain recurring appointments, you must do so in this order: sort the items in ascending order, set <b>IncludeRecurrences</b> to <b>True</b>, and then filter the items.</span></span> <span data-ttu-id="2b0e8-229">この順序を示すコード サンプルでは、次の 2 つ目の例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-229">For a code sample showing this order, see the second example below.</span></span> <span data-ttu-id="2b0e8-230">コレクションには、終了日を含む定期的な予定が含まれているプロパティを <b>True</b> に設定、コレクションを無限の数を示すことがあります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-230">If the collection includes recurring appointments with no end date, setting the property to <b>True</b> may cause the collection to be of infinite count.</span></span> <span data-ttu-id="2b0e8-231">任意のループでこのテストを含めることを確認します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-231">Be sure to include a test for this in any loop.</span></span> <span data-ttu-id="2b0e8-232"><b>ループ</b> のプロパティを <b>True</b> に設定を持つ <b>アイテム</b> のコレクションを反復処理するときは、 <b>項目</b> のコレクションの <b>Count</b> プロパティを使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-232">You should not use <b>Count</b> property of <b>Items</b> collection when iterating <b>Items</b> collection with <b>IncludeRecurrence</b> property set to <b>True</b>.</span></span> <span data-ttu-id="2b0e8-233"><b>数</b> ] の値は未定義の値になります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-233">The value of <b>Count</b> will be an undefined value.</span></span></para>
          <para><span data-ttu-id="2b0e8-234">
            <b>注意</b>: 並べ替えた出現回数の一覧をフィルター処理すると、IncludeRecurrences プロパティが期待した通り動作しなくします。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-234">
            <b>Caution</b>: Filtering on a sorted list of occurrences will cause the IncludeRecurrences property not to work as expected.</span></span> <span data-ttu-id="2b0e8-235">たとえば、次の順序が予定に出現するすべてを返す定期的と非定期的な: (1) Start プロパティ は false (3) の呼び出しに 制限する (つまり、フィルターなど) のプロパティを設定 (2) でソートします。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-235">For example, the following sequence will return all appointment occurrences; recurring and non-recurring: (1) Sort by Start property (2) Set property to false (3) call Restrict (i.e., filter).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Items.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="2b0e8-236">オブジェクトのインデックス番号、またはコレクションのオブジェクトの既定のプロパティに適合する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-236">Either the index number of the object, or a value used to match the default property of an object in the collection.</span></span></param>
        <summary><span data-ttu-id="2b0e8-237">コレクションから Outlook アイテムを返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-237">Returns an Outlook item from a collection.</span></span></summary>
        <value><span data-ttu-id="2b0e8-238">指定されたオブジェクトを表すオブジェクト型 (Object) の値。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-238">An Object value that represents the specified object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Items.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0e8-239">指定されたオブジェクトの親 <b>Object</b> を取得します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-239">Returns the parent <b>Object</b> of the specified object.</span></span> <span data-ttu-id="2b0e8-240">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-240">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawTable">
      <MemberSignature Language="C#" Value="public object RawTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RawTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Items.RawTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawTable As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RawTable { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(90)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(90)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0e8-241">このオブジェクト、メンバー、または列挙体は非推奨です。ユーザーのコード内で使用されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-241">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove([in]int32 Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Items.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(84)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="2b0e8-242">コレクション内で 1 から始まるオブジェクトのインデックス値を指定します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-242">The 1-based index value of the object within the collection.</span></span></param>
        <summary><span data-ttu-id="2b0e8-243">コレクションからオブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-243">Removes an object from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetColumns">
      <MemberSignature Language="C#" Value="public void ResetColumns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetColumns() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Items.ResetColumns" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetColumns ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetColumns();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(93)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b0e8-244">メソッドでキャッシュされているプロパティをクリア <see cref="M:Microsoft.Office.Interop.Outlook._Items.SetColumns(System.String)" /> します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-244">Clears the properties that have been cached with the <see cref="M:Microsoft.Office.Interop.Outlook._Items.SetColumns(System.String)" /> method.</span></span></summary>
        <remarks><para><span data-ttu-id="2b0e8-p134">すべてのプロパティは、 <b>ResetColumns</b> メソッドを呼び出した後にアクセスできます。 <b>Setcolumns メソッドに新しいプロパティをもう一度保存します。</b> <b>ResetColumns</b> は <b>SetColumns</b> が最初に呼び出されていない場合に、何も実行しません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-p134">All properties are accessible after calling the <b>ResetColumns</b> method. <b>SetColumns</b> should be reused to store new properties again. <b>ResetColumns</b> does nothing if <b>SetColumns</b> has not been called first.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Restrict">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Items Restrict (string Filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Items Restrict([in]string Filter) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Items.Restrict(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Restrict (Filter As String) As Items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Items ^ Restrict(System::String ^ Filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Items</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filter"><span data-ttu-id="2b0e8-248">適用するフィルター文字列式。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-248">A filter string expression to be applied.</span></span> <span data-ttu-id="2b0e8-249">詳細については、メソッドを <see cref="M:Microsoft.Office.Interop.Outlook._Items.Find(System.String)" />  参照してください。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-249">For details, see the <see cref="M:Microsoft.Office.Interop.Outlook._Items.Find(System.String)" />  method.</span></span></param>
        <summary><span data-ttu-id="2b0e8-250">コレクションにフィルターを適用し、フィルターに一致する元のすべてのアイテムを含む新しい <see cref="T:Microsoft.Office.Interop.Outlook.Items" />  コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-250">Applies a filter to the <see cref="T:Microsoft.Office.Interop.Outlook.Items" />  collection, returning a new collection containing all of the items from the original that match the filter.</span></span></summary>
        <returns><span data-ttu-id="2b0e8-251">フィルター <b>に</b> 一致する元の Items コレクションのアイテムを表す <b>Items</b> コレクション。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-251">An <b>Items</b> collection that represents the items from the original <b>Items</b> collection which match the filter.</span></span></returns>
        <remarks><para><span data-ttu-id="2b0e8-252">このメソッドは、メソッドまたはメソッドを使用してコレクション内の特定のアイテムを反復 <see cref="M:Microsoft.Office.Interop.Outlook._Items.Find(System.String)" /> <see cref="M:Microsoft.Office.Interop.Outlook._Items.FindNext" />  処理する代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-252">This method is an alternative to using the <see cref="M:Microsoft.Office.Interop.Outlook._Items.Find(System.String)" />  method or <see cref="M:Microsoft.Office.Interop.Outlook._Items.FindNext" />  method to iterate over specific items within a collection.</span></span> <span data-ttu-id="2b0e8-253">アイテム数が少ない場合は、<b>Find</b> メソッドや <b>FindNext</b> メソッドの方が処理が速くなります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-253">The <b>Find</b> or <b>FindNext</b> methods are faster than filtering if there are a small number of items.</span></span> <span data-ttu-id="2b0e8-254"><b>Restrict</b> メソッドは、アイテム数が多くなるほど大幅に処理が速くなります。特に、大きなコレクション内で少数のアイテムを検索する場合に高速になります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-254">The <b>Restrict</b> method is significantly faster if there is a large number of items in the collection, especially if only a few items in a large collection are expected to be found.</span></span></para>
          <para><span data-ttu-id="2b0e8-255">
            <b>注</b>: Find 句または<b>Restrict</b>句の一部<b></b>としてユーザー定義フィールドを使用している場合は、ユーザー定義フィールドがフォルダー内に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-255">
            <b>Note</b>: If you are using user-defined fields as part of a <b>Find</b> or <b>Restrict</b> clause, the user-defined fields must exist in the folder.</span></span> <span data-ttu-id="2b0e8-256">それ以外の場合は、そのフィールドが不明であることを示すエラーがコードによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-256">Otherwise the code will generate an error stating that the field is unknown.</span></span> <span data-ttu-id="2b0e8-257">フォルダーを追加するには、[フィールドの選択] を表示して [新規] をクリックします。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-257">You can add a field to a folder by displaying the Field Chooser and clicking New.</span></span></para>
          <para><span data-ttu-id="2b0e8-258">このメソッドは、次のプロパティと共に使用することはできません (エラーが発生します)。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-258">This method cannot be used and will cause an error with the following properties:</span></span></para>
          <list type="table">
            <item>
              <description><span data-ttu-id="2b0e8-259">BodyCategoriesChildrenClassCompaniesCompanyLastFirstNoSpaceCompanyLastFirstSpaceOnlyContactNamesContactsConversationIndexDLNameEmail1EntryIDEmail2EntryIDEmail3EntryIDEntryIDHTMLBodyIsOnlineMeetingLastFirstAndSuffixLastFirstNoSpaceAutoResolvedWinnerBodyFormatInternetCodePagePermission</span><span class="sxs-lookup"><span data-stu-id="2b0e8-259">BodyCategoriesChildrenClassCompaniesCompanyLastFirstNoSpaceCompanyLastFirstSpaceOnlyContactNamesContactsConversationIndexDLNameEmail1EntryIDEmail2EntryIDEmail3EntryIDEntryIDHTMLBodyIsOnlineMeetingLastFirstAndSuffixLastFirstNoSpaceAutoResolvedWinnerBodyFormatInternetCodePagePermission</span></span></description>
              <description><span data-ttu-id="2b0e8-260">LastFirstNoSpaceCompanyLastFirstSpaceOnlyLastFirstSpaceOnlyCompanyLastFirstNoSpaceAndSuffixMemberCountNetMeetingAliasNetMeetingAutoStartNetMeetingOrganizerAliasNetMeetingServerNetMeetingTypeRecurrenceStateReplyRecipientsReceivedByEntryIDRecevedOnBehalfOfEntryIDResponseStateSavedSentSubmittedVotingOptionsDownloadStateIsConflictMeetingWorkspaceURL</span><span class="sxs-lookup"><span data-stu-id="2b0e8-260">LastFirstNoSpaceCompanyLastFirstSpaceOnlyLastFirstSpaceOnlyCompanyLastFirstNoSpaceAndSuffixMemberCountNetMeetingAliasNetMeetingAutoStartNetMeetingOrganizerAliasNetMeetingServerNetMeetingTypeRecurrenceStateReplyRecipientsReceivedByEntryIDRecevedOnBehalfOfEntryIDResponseStateSavedSentSubmittedVotingOptionsDownloadStateIsConflictMeetingWorkspaceURL</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="2b0e8-261">Find メソッドおよび Restrict メソッドのためのフィルターの作成</span><span class="sxs-lookup"><span data-stu-id="2b0e8-261">Creating Filters for the Find and Restrict Methods</span></span></para>
          <para><span data-ttu-id="2b0e8-p138">フィルターの構文は、フィルターを適用するフィールドの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-p138">The syntax for the filter varies depending on the type of field you are filtering on. </span></span></para>
          <para><span data-ttu-id="2b0e8-263">文字列 (テキスト フィールドの場合)</span><span class="sxs-lookup"><span data-stu-id="2b0e8-263">String (for Text fields)</span></span> </para>
          <para><span data-ttu-id="2b0e8-264">テキスト フィールドを検索する場合は、フィルターの一部である値を区切るアポストロフィ (')、または二重引用符 ("") を使用できます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-264">When searching Text fields, you can use either an apostrophe ('), or  double quotation marks (""), to delimit the values that are part of the filter.</span></span> <span data-ttu-id="2b0e8-265">たとえば、フィールドが String (文字列) 型の場合、次<b></b>のすべての行<b></b>が正C#。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-265">For example, all of the following lines function correctly when the field is of type <b>String</b> (<b>string</b> in C#):</span></span> </para>
          <para><span data-ttu-id="2b0e8-266">sFilter = "[CompanyName] = 'Microsoft'</span><span class="sxs-lookup"><span data-stu-id="2b0e8-266">sFilter = "[CompanyName] = 'Microsoft'"</span></span> </para>
          <para><span data-ttu-id="2b0e8-267">sFilter = "[CompanyName] = "Microsoft""</span><span class="sxs-lookup"><span data-stu-id="2b0e8-267">sFilter = "[CompanyName] = ""Microsoft"""</span></span> </para>
          <para><span data-ttu-id="2b0e8-268">sFilter = "[CompanyName] = " &amp; Chr(34) &amp; "Microsoft" &amp; Chr(34)</span><span class="sxs-lookup"><span data-stu-id="2b0e8-268">sFilter = "[CompanyName] = " &amp; Chr(34) &amp; "Microsoft" &amp; Chr(34)</span></span></para>
          <para><span data-ttu-id="2b0e8-p140">Jet または DASL クエリでフィルターを指定するときに、フィルターに含める文字列の区切り文字として単一引用符のペアを使用しており、かつその文字列に別の単一引用符やアポストロフィが含まれている場合は、その単一引用符またはアポストロフィの前に、エスケープ文字として単一引用符を追加します。文字列の区切り文字として二重引用符を使用している場合も、同様に処理します。つまり、文字列に二重引用符が含まれている場合は、その二重引用符の前に、エスケープ文字として二重引用符を追加します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-p140">In specifying a filter in a Jet or DASL query, if you use a pair of single quotes to delimit a string that is part of the filter, and the string contains another single quote or apostrophe, then add a single quote as an escape character before the single quote or apostrophe. Use a similar approach if you use a pair of double quotes to delimit a string. If the string contains a double quote, then add a double quote as an escape character before the double quote.</span></span></para>
          <para><span data-ttu-id="2b0e8-272">たとえば <b>、Subject</b> プロパティが単語に等しいフィルター処理を行う DASL フィルター文字列では、フィルター文字列全体が二重引用符のペアで区切り、埋め込み文字列を 2 つの一重引用符で区切って指定できます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-272">For example, in the DASL filter string that filters for the <b>Subject</b> property being equal to the word can't, the entire filter string is delimited by a pair of double quotes, and the embedded string can't is delimited by a pair of single quotes.</span></span> <span data-ttu-id="2b0e8-273">このフィルター文字列には、プロパティ参照の開始二重引用符と終了二重引用符、および単語の値条件のアポストロフィの 3 つの文字をエスケープする必要があります http://schemas.microsoft.com/mapi/proptag/0x0037001f 。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-273">There are three characters that you need to escape in this filter string: the starting double quote and the ending double quote for the property reference of http://schemas.microsoft.com/mapi/proptag/0x0037001f, and the apostrophe in the value condition for the word can't.</span></span> <span data-ttu-id="2b0e8-274">適切なエスケープ文字を適用すると、フィルター文字列を次のように表すことができます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-274">Applying the appropriate escape characters, you can express the filter string as follows:</span></span></para>
          <para><span data-ttu-id="2b0e8-275">filter = "@SQL="" http://schemas.microsoft.com/mapi/proptag/0x0037001f "" = 'can't'"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-275">filter = "@SQL=""http://schemas.microsoft.com/mapi/proptag/0x0037001f"" = 'can''t'"</span></span></para>
          <para><span data-ttu-id="2b0e8-276">chr(34) 関数を使用して、エスケープ文字として使用される二重引用符 (ASCII 文字値は 34) を表すこともできます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-276">Alternatively, you can use the chr(34) function to represent the double quote (whose ASCII character value is 34) that is used as an escape character.</span></span> <span data-ttu-id="2b0e8-277">二重引用符のエスケープ文字の代わりに chr(34) を使用すると、最後の例を次のように表すことができます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-277">Using the chr(34) substitution for a double-quote escape character, you can express the last example as follows:</span></span></para>
          <para><span data-ttu-id="2b0e8-278">filter = "@SQL= " &amp; Chr(34) &amp; " " http://schemas.microsoft.com/mapi/proptag/0x0037001f _</span><span class="sxs-lookup"><span data-stu-id="2b0e8-278">filter = "@SQL= " &amp; Chr(34) &amp; "http://schemas.microsoft.com/mapi/proptag/0x0037001f" _</span></span></para>
          <para>    <span data-ttu-id="2b0e8-279">&amp; Chr(34) &amp; " = " &amp; ''t''</span><span class="sxs-lookup"><span data-stu-id="2b0e8-279">&amp; Chr(34) &amp; " = " &amp; "'can''t'"</span></span></para>
          <para><span data-ttu-id="2b0e8-280">DASL クエリを <b>ci_startswith</b> 演算子または <b>ci_phrasematch</b> 演算子と共に使用する場合も、単一引用符と二重引用符をエスケープする必要があります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-280">Escaping single and double quote characters is also required for DASL queries with the <b>ci_startswith</b> or <b>ci_phrasematch</b> operators.</span></span> <span data-ttu-id="2b0e8-281">たとえば、次のクエリは、メッセージの件名で can't の語句一致クエリを実行します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-281">For example, the following query performs a phrase match query for can't in the message subject:</span></span> </para>
          <para><span data-ttu-id="2b0e8-282">filter = "@SQL=" &amp; Chr(34) &amp; " http://schemas.microsoft.com/mapi/proptag/0x0037001E " _</span><span class="sxs-lookup"><span data-stu-id="2b0e8-282">filter = "@SQL=" &amp; Chr(34) &amp; "http://schemas.microsoft.com/mapi/proptag/0x0037001E" _</span></span></para>
          <para>    <span data-ttu-id="2b0e8-283">&amp; Chr(34) &amp; " ci_phrasematch &amp; "'can't'"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-283">&amp; Chr(34) &amp; " ci_phrasematch " &amp; "'can''t'"</span></span></para>
          <para><span data-ttu-id="2b0e8-284">もう 1 つの例は <b>、Subject</b> プロパティが適切な単語と等しい単語をフィルター処理する DASL フィルター文字列です。ここで、単語の内容は二重引用符で囲まれます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-284">Another example is a DASL filter string that filters for the <b>Subject</b> property being equal to the words the right stuff, where the word stuff is enclosed by double quotes.</span></span> <span data-ttu-id="2b0e8-285">この場合、次に示すように、末尾の二重引用符をエスケープする必要があります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-285">In this case, you must escape the enclosing double quotes as follows:</span></span></para>
          <para><span data-ttu-id="2b0e8-286">filter = "@SQL="" http://schemas.microsoft.com/mapi/proptag/0x0037001f "" = 'right ""stuff"''</span><span class="sxs-lookup"><span data-stu-id="2b0e8-286">filter = "@SQL=""http://schemas.microsoft.com/mapi/proptag/0x0037001f"" = 'the right ""stuff""'"</span></span></para>
          <para><span data-ttu-id="2b0e8-287">スペース、単一引用符、二重引用符、またはパーセント文字を含んでいる名前付きプロパティのプロパティ参照には、別のエスケープ規則のセットが適用されます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-287">A different set of escaping rules apply to a property reference for named properties that contain the space, single quote, double quote, or percent character.</span></span> <span data-ttu-id="2b0e8-288">詳細については、「名前空間によってプロパティを参照する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-288">For more information, see Referencing Properties by Namespace.</span></span></para>
          <para><span data-ttu-id="2b0e8-289">日付</span><span class="sxs-lookup"><span data-stu-id="2b0e8-289">Date</span></span></para>
          <para><span data-ttu-id="2b0e8-290">日付と時刻は、通常、日付の書式で格納されますが、<b>Find</b> メソッドおよび <b>Restrict</b> メソッドでは、この書式を文字列の表記に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-290">Although dates and times are typically stored with a Date format, the <b>Find</b> and <b>Restrict</b> methods require that the date and time be converted to a string representation.</span></span> <span data-ttu-id="2b0e8-291">Microsoft Outlook が必要とするとおりに日付が形式化されるようにするには、<b>Format</b> 関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-291">To make sure that the date is formatted as Microsoft Outlook expects, use the <b>Format</b> function.</span></span> <span data-ttu-id="2b0e8-292">次の例では、1999 年 1 月 15 日の午後 3 時 30 分より後に変更されたすべての連絡先を検索するフィルターを作成しています。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-292">The following example creates a filter to find all contacts that have been modified after January 15, 1999 at 3:30 P.M.</span></span> </para>
          <para><span data-ttu-id="2b0e8-293">sFilter = "[LastModificationTime] &gt; '" &amp; Format("1/15/99 3:30pm", "ddddd h:nn AMPM") &amp; "'"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-293">sFilter = "[LastModificationTime] &gt; '" &amp; Format("1/15/99 3:30pm", "ddddd h:nn AMPM") &amp; "'"</span></span></para>
          <para><span data-ttu-id="2b0e8-294">Boolean 演算子</span><span class="sxs-lookup"><span data-stu-id="2b0e8-294">Boolean Operators</span></span></para>
          <para><span data-ttu-id="2b0e8-p147">TRUE/FALSE、YES/NO、ON/OFF などのブール型 (Boolean) の値は、文字列に変換せずに処理する必要があります。たとえば、連絡先の履歴が有効になっているかどうかを確認するには、次のフィルターを使用します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-p147">Boolean operators, TRUE/FALSE, YES/NO, ON/OFF, and so on, should not be converted to a string. For example, to determine whether journaling is enabled for contacts, you can use this filter: </span></span></para>
          <para><span data-ttu-id="2b0e8-297">sFilter = "[Journal] = True"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-297">sFilter = "[Journal] = True"</span></span> </para>
          <para><span data-ttu-id="2b0e8-298">
            <b>注</b>: ブール型フィールドで区切り記号<b></b>として二重引用符を使用すると、空の文字列はフィールドが<b>False</b>のアイテムを検索し、空でない文字列はすべてフィールドが True のアイテムを検索<b>します</b>。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-298">
            <b>Note</b>: If you use quotation marks as delimiters with <b>Boolean</b> fields, then an empty string will find items whose fields are <b>False</b> and all non-empty strings will find items whose fields are <b>True</b>.</span></span> </para>
          <para><span data-ttu-id="2b0e8-299">キーワード (または Categories)</span><span class="sxs-lookup"><span data-stu-id="2b0e8-299">Keywords (or Categories)</span></span></para>
          <para><span data-ttu-id="2b0e8-300">[カテゴリ] フィールドは、複数の値を保持するように設計された型キーワードです。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-300">The Categories field is of type keywords, which is designed to hold multiple values.</span></span> <span data-ttu-id="2b0e8-301">プログラムでアクセスするときには、Categories フィールドはテキスト フィールドのように動作し、文字列は完全一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-301">When accessing it programmatically, the Categories field behaves like a Text field, and the string must match exactly.</span></span> <span data-ttu-id="2b0e8-302">テキスト文字列内の値は、コンマとスペースで区切られています。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-302">Values in the text string are separated by a comma and a space.</span></span> <span data-ttu-id="2b0e8-303">つまり、一般に複数の値が含まれているキーワード フィールドには <b>Find</b> メソッドと <b>Restrict</b> メソッドが使用できないということです。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-303">This typically means that you cannot use the <b>Find</b> and <b>Restrict</b> methods on a keywords field if it contains more than one value.</span></span> <span data-ttu-id="2b0e8-304">たとえば、Business のカテゴリに 1 つの連絡先があり、Business と Social のカテゴリに 1 つの連絡先がある場合は、Business のカテゴリに含まれるすべてのアイテムを取得するために、<b>Find</b> メソッドと <b>Restrict</b> メソッドを簡単に使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-304">For example, if you have one contact in the Business category and one contact in the Business and Social categories, you cannot easily use the <b>Find</b> and <b>Restrict</b> methods to retrieve all items that are in the Business category.</span></span> <span data-ttu-id="2b0e8-305">その代わりに、フォルダー内のすべての連絡先をループ処理して、全体のキーワード フィールド内に文字列 "Business" が含まれているかどうかを <b>Instr</b> 関数でテストします。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-305">Instead, you can loop through all contacts in the folder and use the <b>Instr</b> function to test whether the string "Business" is contained within the entire keywords field.</span></span> </para>
          <para><span data-ttu-id="2b0e8-306">
            <b>注</b>: 可能な例外は、[カテゴリ] フィールドを 2 つ、または値の数が少ない場合です。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-306">
            <b>Note</b>: A possible exception is if you limit the Categories field to two, or a low number of values.</span></span> <span data-ttu-id="2b0e8-307">次に <b>、Or</b> 論理演算子で Find メソッドと <b>Restrict</b> メソッドを使用して、すべての Business 連絡先を取得できます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-307">Then you can use the <b>Find</b> and <b>Restrict</b> methods with the OR logical operator to retrieve all Business contacts.</span></span> <span data-ttu-id="2b0e8-308">たとえば、"Business" OR "Business, Personal" OR "Personal, Business" のようにします (擬似コード)。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-308">For example (in pseudocode): "Business" OR "Business, Personal" OR "Personal, Business."</span></span> <span data-ttu-id="2b0e8-309">Category の文字列は、大文字と小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-309">Category strings are not case sensitive.</span></span> </para>
          <para><span data-ttu-id="2b0e8-310">整数</span><span class="sxs-lookup"><span data-stu-id="2b0e8-310">Integer</span></span></para>
          <para><span data-ttu-id="2b0e8-311">区切り記号を <b>使用するか</b> 、引用符を付けずに整数フィールドを検索できます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-311">You can search for <b>Integer</b> fields with, or without quotation marks as delimiters.</span></span> <span data-ttu-id="2b0e8-312">次に示すのは、Outlook 2000 で作成した連絡先を取得するフィルターです。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-312">The following filters will find contacts that were created using  Outlook 2000:</span></span> </para>
          <para><span data-ttu-id="2b0e8-313">sFilter = "[OutlookInternalVersion] = 92711"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-313">sFilter = "[OutlookInternalVersion] = 92711"</span></span> </para>
          <para><span data-ttu-id="2b0e8-314">sFilter = "[OutlookInternalVersion] = '92711'"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-314">sFilter = "[OutlookInternalVersion] = '92711'"</span></span></para>
          <para><span data-ttu-id="2b0e8-315">フィルターの一部として変数を使用する</span><span class="sxs-lookup"><span data-stu-id="2b0e8-315">Using Variables as Part of the Filter</span></span></para>
          <para><span data-ttu-id="2b0e8-316"><b>Restrict</b> メソッドの例で示したように、フィルターには変数の値を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-316">As the <b>Restrict</b> method example illustrates, you can use values from variables as part of the filter.</span></span> <span data-ttu-id="2b0e8-317">次の Microsoft Visual Basicコード サンプルは、フィルターの一部として変数を使用する構文を示しています。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-317">The following Microsoft Visual Basic code sample illustrates syntax that uses variables as part of the filter.</span></span> </para>
          <para><span data-ttu-id="2b0e8-318">sFullName = "Dan Wilson"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-318">sFullName = "Dan Wilson"</span></span> </para>
          <para><span data-ttu-id="2b0e8-319">' この方法では、値を区切る Chr(34) を使用します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-319">' This approach uses Chr(34) to delimit the value.</span></span> </para>
          <para><span data-ttu-id="2b0e8-320">sFilter = "[FullName] = " &amp; Chr(34) &amp; sFullName &amp; Chr(34)</span><span class="sxs-lookup"><span data-stu-id="2b0e8-320">sFilter = "[FullName] = " &amp; Chr(34) &amp; sFullName &amp; Chr(34)</span></span> </para>
          <para><span data-ttu-id="2b0e8-321">' この方法では、値を区切る二重引用符を使用します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-321">' This approach uses double quotation marks to delimit the value.</span></span> </para>
          <para><span data-ttu-id="2b0e8-322">sFilter = "[FullName] = """ &amp; sFullName &amp; """</span><span class="sxs-lookup"><span data-stu-id="2b0e8-322">sFilter = "[FullName] = """ &amp; sFullName &amp; """"</span></span></para>
          <para><span data-ttu-id="2b0e8-323">フィルターの一部として論理演算子を使用する</span><span class="sxs-lookup"><span data-stu-id="2b0e8-323">Using Logical Operators as Part of the Filter</span></span></para>
          <para><span data-ttu-id="2b0e8-324">論理演算子は、AND、OR、および NOT が使用可能です。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-324">Logical operators that are allowed are AND, OR, and NOT.</span></span> <span data-ttu-id="2b0e8-325">複数の条件を指定できるよう <b>、Restrict</b> メソッドの句のバリエーションを次に示します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-325">The following are variations of the clause for the <b>Restrict</b> method so you can specify multiple criteria.</span></span>  </para>
          <para><span data-ttu-id="2b0e8-326">OR: カテゴリが Business または Personal のすべての連絡先アイテムを返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-326">OR: The following code returns all contact items that have either Business or Personal as their category.</span></span> </para>
          <para><span data-ttu-id="2b0e8-327">sFilter = "[Categories] = 'Personal' または [Categories] = 'Business'</span><span class="sxs-lookup"><span data-stu-id="2b0e8-327">sFilter = "[Categories] = 'Personal' Or [Categories] = 'Business'"</span></span> </para>
          <para><span data-ttu-id="2b0e8-328">AND: Microsoft で勤務している個人用連絡先をすべて取得します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-328">AND: The following code retrieves all personal contacts who work at Microsoft.</span></span> </para>
          <para><span data-ttu-id="2b0e8-329">sFilter = "[Categories] = 'Personal' および [CompanyName] = 'Microsoft'</span><span class="sxs-lookup"><span data-stu-id="2b0e8-329">sFilter = "[Categories] = 'Personal' And [CompanyName] = 'Microsoft'"</span></span> </para>
          <para><span data-ttu-id="2b0e8-330">NOT: Microsoft に勤務していない個人用連絡先をすべて取得します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-330">NOT: The following code retrieves all personal contacts who don't work at Microsoft.</span></span> </para>
          <para><span data-ttu-id="2b0e8-331">sFilter = "[Categories] = 'Personal' and Not([CompanyName] = 'Microsoft')"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-331">sFilter = "[Categories] = 'Personal' And Not([CompanyName] = 'Microsoft')"</span></span></para>
          <para><span data-ttu-id="2b0e8-332">追加情報</span><span class="sxs-lookup"><span data-stu-id="2b0e8-332">Additional Notes</span></span></para>
          <para><span data-ttu-id="2b0e8-333">ユーザー定義フィールドで <b>Find</b> メソッドまたは <b>Restrict</b> メソッドを使用する場合は、フィールドをフォルダー内で定義する必要があります。それ以外の場合はエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-333">If you are trying to use the <b>Find</b> or <b>Restrict</b> methods with user-defined fields, the fields must be defined in the folder, otherwise an error will occur.</span></span> <span data-ttu-id="2b0e8-334">「含む」操作を実行する方法はありません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-334">There is no way to perform a "contains" operation.</span></span> <span data-ttu-id="2b0e8-335">たとえば、Subject フィールドに特定の語が含まれているアイテムを検索するために、<b>Find</b> または <b>Restrict</b> は使用できません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-335">For example, you cannot use <b>Find</b> or <b>Restrict</b> to search for items that have a particular word in the Subject field.</span></span> <span data-ttu-id="2b0e8-336">代わりに、メソッドを使用するか、フォルダー内のすべてのアイテムをループ処理し、InStr 関数を使用してフィールド内で検索 <see cref="M:Microsoft.Office.Interop.Outlook._Application.AdvancedSearch(System.String,System.Object,System.Object,System.Object)" /> を実行できます。 <b></b></span><span class="sxs-lookup"><span data-stu-id="2b0e8-336">Instead, you can use the <see cref="M:Microsoft.Office.Interop.Outlook._Application.AdvancedSearch(System.String,System.Object,System.Object,System.Object)" /> method, or you can loop through all of the items in the folder and use the <b>InStr</b> function to perform a search within a field.</span></span> <span data-ttu-id="2b0e8-337"><b>Restrict</b> メソッドは、特定の範囲の文字で始まるアイテムの検索に使用できます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-337">You can use the <b>Restrict</b> method to search for items that begin within a certain range of characters.</span></span> <span data-ttu-id="2b0e8-338">たとえば、姓が文字 M で始まる連絡先のすべてを検索するには、次のフィルターを使用します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-338">For example, to search for all contacts with a last name beginning with the letter M, use this filter:</span></span> </para>
          <para><span data-ttu-id="2b0e8-339">sFilter = "[LastName] &gt; 'LZZZ' および [LastName] &lt; 'N'"</span><span class="sxs-lookup"><span data-stu-id="2b0e8-339">sFilter = "[LastName] &gt; 'LZZZ' And [LastName] &lt; 'N'"</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Items.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0e8-340">現在のセッション <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  のオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-340">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="2b0e8-341">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-341">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2b0e8-342"><b>Session プロパティ</b>とメソッドを同じ意味で使用して、現在のセッションの <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> <b>NameSpace</b>オブジェクトを取得できます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-342">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="2b0e8-343">両方のメンバーでは、同じ目的を果たします。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-343">Both members serve the same purpose.</span></span> <span data-ttu-id="2b0e8-344">たとえば、次のステートメントのペアは同じ関数を実行します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-344">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumns">
      <MemberSignature Language="C#" Value="public void SetColumns (string Columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetColumns([in]string Columns) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Items.SetColumns(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumns (Columns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumns(System::String ^ Columns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(92)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Columns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Columns"><span data-ttu-id="2b0e8-345">キャッシュに格納するプロパティの名前を含む文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-345">A string that contains the names of the properties to cache.</span></span> <span data-ttu-id="2b0e8-346">この文字列内では、プロパティ名をコンマで区切ります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-346">The property names are delimited by commas in this string.</span></span></param>
        <summary><span data-ttu-id="2b0e8-347">特定のプロパティをキャッシュに格納して、コレクションのアイテムの特定のプロパティに非常に早くアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-347">Caches certain properties for extremely fast access to those particular properties of an item within the collection.</span></span></summary>
        <remarks><para><span data-ttu-id="2b0e8-348"><b>SetColumns メソッド</b>は、コレクションを反復処理する場合に便利 <see cref="T:Microsoft.Office.Interop.Outlook.Items" /> です。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-348">The <b>SetColumns</b> method is useful for iterating through the <see cref="T:Microsoft.Office.Interop.Outlook.Items" /> collection.</span></span> <span data-ttu-id="2b0e8-349">このメソッドを使用しない場合、 Microsoft Outlookは、プロパティにアクセスするには、各項目を開く必要があります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-349">If you don't use this method, Microsoft Outlook must open each item to access the property.</span></span> <span data-ttu-id="2b0e8-350">、 <b>SetColumns</b> メソッドを使用して Outlook はキャッシュに格納されて、し、これらのプロパティを高速で読み取り専用のアクセスを提供するプロパティだけをチェックします。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-350">With the <b>SetColumns</b> method, Outlook only checks the properties that you have cached, and provides fast, read-only access to these properties.</span></span></para>
          <para><span data-ttu-id="2b0e8-351">コレクションの特定のプロパティに対して <b>SetColumns</b> メソッドを実行すると、そのコレクション内の他のプロパティを読み取ることができなくなります (つまり、キャッシュに格納されていないプロパティを取得しようとすると、空の値が返されます)。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-351">After applying the <b>SetColumns</b> method on specific properties of the collection, you cannot read other properties of that collection; properties which are not cached are returned empty.</span></span> <span data-ttu-id="2b0e8-352">また、そのコレクションのプロパティへの書き込みもできなくなります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-352">You cannot write to any of the properties of that collection either.</span></span> <span data-ttu-id="2b0e8-353">または、読み取り/書き込み、一連のアイテムへの高速アクセスが必要な場合は、オブジェクトを使用 <see cref="T:Microsoft.Office.Interop.Outlook.Table" /> します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-353">Alternatively, if you require read-write, fast access to a set of items, use the <see cref="T:Microsoft.Office.Interop.Outlook.Table" /> object.</span></span></para>
          <para><span data-ttu-id="2b0e8-p165">
            <b>SetColumns</b> ことはできませんが使用され、オブジェクトを返す任意のプロパティでは、エラーが発生します。次のプロパティで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-p165">
            <b>SetColumns</b> cannot be used, and will cause an error, with any property that returns an object. It cannot be used with the following properties:</span></span></para>
          <list type="table">
            <item>
              <description><span data-ttu-id="2b0e8-356">AutoResolvedWinner</span><span class="sxs-lookup"><span data-stu-id="2b0e8-356">AutoResolvedWinner</span></span></description>
              <description><span data-ttu-id="2b0e8-357">InternetCodePage</span><span class="sxs-lookup"><span data-stu-id="2b0e8-357">InternetCodePage</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="2b0e8-358">Body</span><span class="sxs-lookup"><span data-stu-id="2b0e8-358">Body</span></span></description>
              <description><span data-ttu-id="2b0e8-359">MeetingWorkspaceURL</span><span class="sxs-lookup"><span data-stu-id="2b0e8-359">MeetingWorkspaceURL</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="2b0e8-360">BodyFormat</span><span class="sxs-lookup"><span data-stu-id="2b0e8-360">BodyFormat</span></span></description>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._DistListItem.MemberCount" />
              </description>
            </item>
            <item>
              <description><span data-ttu-id="2b0e8-361">Categories</span><span class="sxs-lookup"><span data-stu-id="2b0e8-361">Categories</span></span></description>
              <description><span data-ttu-id="2b0e8-362">ReceivedByEntryID</span><span class="sxs-lookup"><span data-stu-id="2b0e8-362">ReceivedByEntryID</span></span></description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.Children" />
              </description>
              <description><span data-ttu-id="2b0e8-363">ReceivedOnBehalfOfEntryID</span><span class="sxs-lookup"><span data-stu-id="2b0e8-363">ReceivedOnBehalfOfEntryID</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="2b0e8-364">Class</span><span class="sxs-lookup"><span data-stu-id="2b0e8-364">Class</span></span></description>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.RecurrenceState" />
              </description>
            </item>
            <item>
              <description><span data-ttu-id="2b0e8-365">Companies</span><span class="sxs-lookup"><span data-stu-id="2b0e8-365">Companies</span></span></description>
              <description><span data-ttu-id="2b0e8-366">ReplyRecipients</span><span class="sxs-lookup"><span data-stu-id="2b0e8-366">ReplyRecipients</span></span></description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._DistListItem.DLName" />
              </description>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._TaskItem.ResponseState" />
              </description>
            </item>
            <item>
              <description><span data-ttu-id="2b0e8-367">DownloadState</span><span class="sxs-lookup"><span data-stu-id="2b0e8-367">DownloadState</span></span></description>
              <description><span data-ttu-id="2b0e8-368">Saved</span><span class="sxs-lookup"><span data-stu-id="2b0e8-368">Saved</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="2b0e8-369">EntryID</span><span class="sxs-lookup"><span data-stu-id="2b0e8-369">EntryID</span></span></description>
              <description><span data-ttu-id="2b0e8-370">送信日時</span><span class="sxs-lookup"><span data-stu-id="2b0e8-370">Sent</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="2b0e8-371">HTMLBody</span><span class="sxs-lookup"><span data-stu-id="2b0e8-371">HTMLBody</span></span></description>
              <description><span data-ttu-id="2b0e8-372">Submitted</span><span class="sxs-lookup"><span data-stu-id="2b0e8-372">Submitted</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="2b0e8-373">IsConflict</span><span class="sxs-lookup"><span data-stu-id="2b0e8-373">IsConflict</span></span></description>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.VotingOptions" />
              </description>
            </item>
          </list>
          <para><span data-ttu-id="2b0e8-p166"><b>SetColumns</b> メソッドを使用して <b>ConversationIndex</b> プロパティをキャッシュすることはできません。ただし、このプロパティは、前述の他のプロパティと同じようにエラーは発生しません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-p166">The <b>ConversationIndex</b> property cannot be cached using the <b>SetColumns</b> method. However, this property will not result in an error like the other properties listed above.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (string Property, object Descending);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort([in]string Property, [in]object Descending) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Items.Sort(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (Property As String, Optional Descending As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(97)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Property" Type="System.String" />
        <Parameter Name="Descending" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Property"><span data-ttu-id="2b0e8-376">並べ替えるプロパティの名前 (角かっこで囲む場合があります。"[CompanyName]" など)。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-376">The name of the property by which to sort, which may be enclosed in brackets, for example, "[CompanyName]".</span></span> <span data-ttu-id="2b0e8-377">スペースを含むユーザー定義プロパティは、角かっこで囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-377">User-defined properties that contain spaces must be enclosed in brackets.</span></span> <span data-ttu-id="2b0e8-378">型キーワードのユーザー定義プロパティではなく、カテゴリなどの複数値のプロパティを指定できません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-378">May not be a user-defined property of type keywords, and may not be a multi-valued property, such as a category.</span></span> <span data-ttu-id="2b0e8-379">ユーザー定義プロパティの場合、プロパティは、アイテムを含むオブジェクトを表す <b>UserDefinedProperties</b> コレクションに <see cref="P:Microsoft.Office.Interop.Outlook._Items.Parent" /> <see cref="T:Microsoft.Office.Interop.Outlook.Folder" /> 存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-379">For user-defined properties, the property must exist in the <b>UserDefinedProperties</b> collection for <see cref="P:Microsoft.Office.Interop.Outlook._Items.Parent" />, which represents the <see cref="T:Microsoft.Office.Interop.Outlook.Folder" /> object that contains the items.</span></span></param>
        <param name="Descending"><span data-ttu-id="2b0e8-380"><b>True を指定</b> の順序を降順で並べ替えるには。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-380"><b>True</b> to sort in descending order.</span></span> <span data-ttu-id="2b0e8-381">既定値が <b>False</b> (昇順です)。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-381">The default value is <b>False</b> (ascending).</span></span></param>
        <summary><span data-ttu-id="2b0e8-382">指定されたプロパティごとにアイテムのコレクションを並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-382">Sorts the collection of items by the specified property.</span></span> <span data-ttu-id="2b0e8-383">コレクションのインデックスは、メソッドの完了時に 1 に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-383">The index for the collection is reset to 1 upon completion of this method.</span></span></summary>
        <remarks><para><span data-ttu-id="2b0e8-384">
            <b>並べ替え</b> は、コレクション内の項目の順序にのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-384">
            <b>Sort</b> only affects the order of items in a collection.</span></span> <span data-ttu-id="2b0e8-385">エクスプ ローラー ビューでアイテムの順序には影響しません。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-385">It does not affect the order of items in an explorer view.</span></span></para>
          <para><span data-ttu-id="2b0e8-386">
            <b>並</b> べ替えは使用できません。パラメーターが次のプロパティの 1 つである場合は <paramref name="property" /> エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="2b0e8-386">
            <b>Sort</b> cannot be used and will cause an error if the <paramref name="property" /> parameter is one of the following properties:</span></span>                </para>
          <list type="table">
            <item>
              <description><span data-ttu-id="2b0e8-387">
                <b>カテゴリ</b>
              </span><span class="sxs-lookup"><span data-stu-id="2b0e8-387">
                <b>Categories</b>
              </span></span></description>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.LastFirstSpaceOnly" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.Children" />
              </description>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.LastFirstSpaceOnlyCompany" />
              </description>
            </item>
            <item>
              <description><span data-ttu-id="2b0e8-388">
                <b>クラス</b>
              </span><span class="sxs-lookup"><span data-stu-id="2b0e8-388">
                <b>Class</b>
              </span></span></description>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._DistListItem.MemberCount" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.CompanyLastFirstNoSpace" />
              </description>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.NetMeetingAlias" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.CompanyLastFirstSpaceOnly" />
              </description>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.RecurrenceState" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._DistListItem.DLName" />
              </description>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._TaskItem.ResponseState" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.LastFirstAndSuffix" />
              </description>
              <description><span data-ttu-id="2b0e8-389">
                <b>保存済み</b>
              </span><span class="sxs-lookup"><span data-stu-id="2b0e8-389">
                <b>Saved</b>
              </span></span></description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.LastFirstNoSpace" />
              </description>
              <description><span data-ttu-id="2b0e8-390">
                <b>送信</b>
              </span><span class="sxs-lookup"><span data-stu-id="2b0e8-390">
                <b>Sent</b>
              </span></span></description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.LastFirstNoSpaceCompany" />
              </description>
              <description />
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
